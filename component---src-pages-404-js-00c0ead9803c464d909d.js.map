{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/utils/siteConfig.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/common/Layout.js","webpack:///./src/components/common/PostCard.js","webpack:///./src/components/common/Pagination.js","webpack:///./src/components/common/Navigation.js","webpack:///./src/components/common/index.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["NotFoundPage","className","style","textAlign","to","StaticQueryContext","React","createContext","StaticQuery","props","Consumer","staticQueryData","data","query","render","children","propTypes","PropTypes","object","string","isRequired","func","module","exports","siteUrl","postsPerPage","siteTitleMeta","siteDescriptionMeta","siteTwitterHandle","siteFacebookHandle","language","shareImageWidth","shareImageHeight","shortTitle","siteIcon","backgroundColor","themeColor","cover_image","logo","navigation","label","url","googleAnalyticsId","disqusShortname","m","require","default","DefaultLayout","bodyClass","ButtonContainer","isHome","config","replace","styled","div","Button","button","HeaderTitle","h1","lang","onClick","e","preventDefault","window","location","href","icon","faHome","id","node","bool","DefaultLayoutSettingsQuery","PostCard","post","frontmatter","slug","readingTime","readingTimeHelper","feature_image","childImageSharp","fluid","alt","title","tags","name","featured","excerpt","author","src","profile_image","shape","Pagination","pageContext","previousPagePath","nextPagePath","humanPageNumber","numberOfPages","role","rel","Navigation","navClass","map","navItem","i","match","key","target","defaultProps","arrayOf","ProdPageRenderer","pageResources","loader","getResourcesForPathnameSync","pathname","createElement","InternalPageRenderer","json"],"mappings":"0FAAA,6CAiBeA,UAbM,kBACjB,kBAAC,IAAD,KACI,yBAAKC,UAAU,aACX,6BAASA,UAAU,UAAUC,MAAO,CAAEC,UAAW,WAC7C,wBAAIF,UAAU,iBAAd,aACA,6BAASA,UAAU,IAAnB,mBACoB,kBAAC,IAAD,CAAMG,GAAG,KAAT,eADpB,uB,iCCThB,sIAaMC,EAAqBC,IAAMC,cAAc,IAEzCC,EAAc,SAAAC,GAAK,OACvB,kBAACJ,EAAmBK,SAApB,MACG,SAAAC,GACC,OACEF,EAAMG,MACLD,EAAgBF,EAAMI,QAAUF,EAAgBF,EAAMI,OAAOD,MAEtDH,EAAMK,QAAUL,EAAMM,UAC5BN,EAAMG,KAAOH,EAAMG,KAAKA,KAAOD,EAAgBF,EAAMI,OAAOD,MAGvD,0DA4BfJ,EAAYQ,UAAY,CACtBJ,KAAMK,IAAUC,OAChBL,MAAOI,IAAUE,OAAOC,WACxBN,OAAQG,IAAUI,KAClBN,SAAUE,IAAUI,O,kBC1DtBC,EAAOC,QAAU,CACbC,QAAS,uCAETC,aAAc,GAEdC,cAAe,qBACfC,oBAAqB,qCACrBC,kBAAmB,aACnBC,mBAAoB,eACpBC,SAAU,KAEVC,gBAAiB,IACjBC,iBAAkB,IAElBC,WAAY,gBACZC,SAAU,cACVC,gBAAiB,UACjBC,WAAY,UACZC,YAAa,GAEbC,KAAM,mBAENC,WAAY,CACR,CACIC,MAAO,OACPC,IAAK,KAET,CACID,MAAO,WACPC,IAAK,WAIbC,kBAAmB,GAEnBC,gBAAiB,K,oBCnCrB,IAAsBC,EAKpBtB,EAAOC,SALaqB,EAKWC,EAAQ,OALRD,EAAEE,SAAYF,G,qMCuBzCG,G,OAAgB,SAAC,GAA0C,EAAxCnC,KAAwC,IAAlCG,EAAkC,EAAlCA,SAAUiC,EAAwB,EAAxBA,UAI/BC,GAJuD,EAAbC,OACnCC,IACMA,IAAOvB,mBAA2CuB,IAAOvB,kBAAkBwB,QAAQ,KAAjC,IACjDD,IAAOtB,oBAAiDsB,IAAOtB,mBAAmBuB,QAAQ,MAAlC,IACpDC,IAAOC,IAAV,iMAMfC,EAASF,IAAOG,OAAV,kUAeNC,EAAcJ,IAAOK,GAAV,mRAYjB,OACA,oCACI,kBAAC,IAAD,KACI,0BAAMC,KAAMR,IAAOrB,WACnB,0BAAM7B,UAAW+C,KAGrB,yBAAK/C,UAAU,YAEX,yBAAKA,UAAU,gBAGX,4BAAQA,UAAU,aACd,yBAAKA,UAAU,aACf,gCAAQ,kBAACgD,EAAD,KACJ,kBAACM,EAAD,CAAQK,QAAS,SAACC,GACdA,EAAEC,iBACFC,OAAOC,SAASC,KAAK,wBAEzB,kBAAC,IAAD,CAAiBC,KAAMC,MAJvB,WAQJ,kBAACV,EAAD,kCAyCJ,0BAAMxD,UAAU,YAAYmE,GAAG,gBAG1BrD,IAKT,yBAAKd,UAAU,mBAEX,4BAAQA,UAAU,aACd,yBAAKA,UAAU,kCAmBnC8C,EAAc/B,UAAY,CACtBD,SAAUE,IAAUoD,KAAKjD,WACzB4B,UAAW/B,IAAUE,OACrB+B,OAAQjC,IAAUqD,MAGtB,IAiBeC,EAjBoB,SAAA9D,GAAK,OACpC,kBAAC,IAAD,CACII,MAAK,aAWLC,OAAQ,SAAAF,GAAI,OAAI,kBAAC,EAAD,eAAeA,KAAMA,GAAUH,Q,kBCvKjD+D,EAAW,SAAC,GAAa,IAAXC,EAAW,EAAXA,KAEVhC,EAAM,IAAIgC,EAAKC,YAAYC,KAAxB,IACHC,EAAcC,YAAkBJ,GAEtC,OACI,kBAAC,IAAD,CAAMrE,GAAIqC,EAAKxC,UAAU,aACrB,4BAAQA,UAAU,oBACbwE,EAAKC,YAAYI,eACdL,EAAKC,YAAYI,cAAcC,iBAC/B,kBAAC,IAAD,CACIC,MACIP,EAAKC,YAAYI,cACZC,gBAAgBC,MAEzBC,IAAKR,EAAKC,YAAYQ,SAQlC,yBAAKjF,UAAU,qBACVwE,EAAKC,YAAYS,MACd,0BAAMlF,UAAU,kBACXwE,EAAKC,YAAYS,KAAK,GAAGT,YAAYU,MAG7CX,EAAKC,YAAYW,UAAY,0CAC9B,wBAAIpF,UAAU,mBACTwE,EAAKC,YAAYQ,OAEtB,6BAASjF,UAAU,qBACdwE,EAAKa,SAEV,4BAAQrF,UAAU,oBACd,yBAAKA,UAAU,yBACX,yBAAKA,UAAU,oBACVwE,EAAKC,YAAYa,OACd,yBACItF,UAAU,uBACVuF,IACIf,EAAKC,YAAYa,OAAOb,YACnBe,cAETR,IACIR,EAAKC,YAAYa,OAAOb,YACnBU,OAIb,yBACInF,UAAU,iBACVuF,IAAI,2BACJP,IACIR,EAAKC,YAAYa,OAAOb,YACnBU,QAKrB,0BAAMnF,UAAU,yBACXwE,EAAKC,YAAYa,OAAOb,YAAYU,OAG7C,yBAAKnF,UAAU,0BACX,yBAAKA,UAAU,qBACV2E,QAS7BJ,EAASxD,UAAY,CACjByD,KAAMxD,IAAUyE,MAAM,CAClBhB,YAAazD,IAAUC,OAAOE,aAC/BA,YAGQoD,QCrFTmB,EAAa,SAAC,GAAoB,IAAlBC,EAAkB,EAAlBA,YACVC,EAAmED,EAAnEC,iBAAkBC,EAAiDF,EAAjDE,aAAcC,EAAmCH,EAAnCG,gBAAiBC,EAAkBJ,EAAlBI,cAEzD,OACI,yBAAK/F,UAAU,aAAagG,KAAK,cAC7B,6BACKJ,GAEG,kBAAC,IAAD,CAAMzF,GAAIyF,EAAkBK,IAAI,QAAhC,aAMPF,EAAgB,GAAK,yBAAK/F,UAAU,uBAAf,QAA2C8F,EAA3C,OAAgEC,GACtF,6BACKF,GAEG,kBAAC,IAAD,CAAM1F,GAAI0F,EAAcI,IAAI,QAA5B,WASpBP,EAAW3E,UAAY,CACnB4E,YAAa3E,IAAUC,OAAOE,YAGnBuE,QCrBTQ,G,YAAa,SAAC,GAAD,IAAGvF,EAAH,EAAGA,KAAMwF,EAAT,EAASA,SAAT,OACf,oCACKxF,EAAKyF,KAAI,SAACC,EAASC,GAChB,OAAID,EAAQ7D,IAAI+D,MAAM,kBACX,uBAAGvG,UAAWmG,EAAUnC,KAAMqC,EAAQ7D,IAAKgE,IAAKF,EAAGG,OAAO,SAASR,IAAI,uBAAuBI,EAAQ9D,OAEtG,kBAAC,IAAD,CAAMvC,UAAWmG,EAAUhG,GAAIkG,EAAQ7D,IAAKgE,IAAKF,GAAID,EAAQ9D,aAMpF2D,EAAWQ,aAAe,CACtBP,SAAU,iBAGdD,EAAWnF,UAAY,CACnBJ,KAAMK,IAAU2F,QACZ3F,IAAUyE,MAAM,CACZlD,MAAOvB,IAAUE,OAAOC,WACxBqB,IAAKxB,IAAUE,OAAOC,aACvBA,YACLA,WACFgF,SAAUnF,IAAUE,QCrCxB,uG,iGCMM0F,EAAmB,SAAC,GAAiB,IAAf7C,EAAe,EAAfA,SACpB8C,EAAgBC,UAAOC,4BAA4BhD,EAASiD,UAClE,OAAKH,EAIExG,IAAM4G,cAAcC,IAApB,eACLnD,WACA8C,iBACGA,EAAcM,OANV,MAUXP,EAAiB7F,UAAY,CAC3BgD,SAAU/C,IAAUyE,MAAM,CACxBuB,SAAUhG,IAAUE,OAAOC,aAC1BA,YAGUyF","file":"component---src-pages-404-js-00c0ead9803c464d909d.js","sourcesContent":["import React from 'react'\nimport { Link } from 'gatsby'\nimport { Layout } from '../components/common'\n\nconst NotFoundPage = () => (\n    <Layout>\n        <div className=\"container\">\n            <article className=\"content\" style={{ textAlign: `center` }}>\n                <h1 className=\"content-title\">Error 404</h1>\n                <section className=\"\">\n                    Page not found, <Link to=\"/\">return home</Link> to start over\n                </section>\n            </article>\n        </div>\n    </Layout>\n)\n\nexport default NotFoundPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","module.exports = {\n    siteUrl: `https://rushabh31.github.io/blogsite`, // Site domain. Do not include a trailing slash!\n\n    postsPerPage: 12, // Number of posts shown on paginated pages (changes this requires sometimes to delete the cache)\n\n    siteTitleMeta: `Gatsby Theme Ghost`, // This allows an alternative site title for meta data for pages.\n    siteDescriptionMeta: `Minimalistic Gatsby theme for blog`, // This allows an alternative site description for meta data for pages.\n    siteTwitterHandle: `@rushabh31`,\n    siteFacebookHandle: `rushabhpatel`,\n    language: `en`,\n\n    shareImageWidth: 1000, // Change to the width of your default share image\n    shareImageHeight: 523, // Change to the height of your default share image\n\n    shortTitle: `Personal Blog`, // Used for App manifest e.g. Mobile Home Screen\n    siteIcon: `favicon.png`, // Logo in /static dir used for SEO, RSS, and App manifest\n    backgroundColor: `#e9e9e9`, // Used for Offline Manifest\n    themeColor: `#15171A`, // Used for Offline Manifest\n    cover_image: ``,\n\n    logo: `/images/logo.png`,\n\n    navigation: [\n        {\n            label: `Home`,\n            url: `/`,\n        },\n        {\n            label: `About me`,\n            url: `/about`,\n        },\n    ],\n\n    googleAnalyticsId: \"\", // ADD_COMPLETE_TRACKING_ID => UA-151385213-1\n\n    disqusShortname: \"\" // ADD_SHORT_NAME => https://help.disqus.com/en/articles/1717111-what-s-a-shortname\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { Link, StaticQuery, graphql } from 'gatsby'\nimport Img from 'gatsby-image'\nimport styled from 'styled-components';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faHome } from '@fortawesome/free-solid-svg-icons'\nimport { Navigation } from '.'\nimport config from '../../utils/siteConfig'\n// import Particles from './particles';\n\n// Styles\nimport '../../styles/app.css'\n\n/**\n* Main layout component\n*\n* The Layout component wraps around each page and template.\n* It also provides the header, footer as well as the main\n* styles, and meta data for each page.\n*\n*/\nconst DefaultLayout = ({ data, children, bodyClass, isHome }) => {\n    const site = config\n    const twitterUrl = config.siteTwitterHandle ? `https://twitter.com/${config.siteTwitterHandle.replace(/^@/, ``)}` : null\n    const facebookUrl = config.siteFacebookHandle ? `https://www.facebook.com/${config.siteFacebookHandle.replace(/^\\//, ``)}` : null\n    const ButtonContainer = styled.div`\n                display: 'block';\n                position: 'absolute';\n                top: 10px;\n                align-content: 'center';\n                right: 10px;`\n    const Button = styled.button`\n    -webkit-appearance: none;\n    background: #e4405f;\n    color: #FFF;\n    border: none;\n    padding: 8px 16px;\n    font-size: 16px;\n    border-radius: 5px;\n    cursor: pointer;\n    transition: 0.2s;\n    outline: 0;\n    :hover {\n        box-shadow: 0px 0px 10px 1px rgba(0,0,0,0.10);\n    }`\n\n    const HeaderTitle = styled.h1`\n    font-weight: 500;\n    font-family: \"cassette\";\n    line-height: 1.15;\n    margin: 1.25rem 0;\n    font-size: 4.5em;\n    text-align: center;\n    color: #a7c56b;\n    @media only screen and (max-width: 768px) {\n        font-size: 3em;\n    }\n    `\n    return (\n    <>\n        <Helmet>\n            <html lang={config.language} />\n            <body className={bodyClass} />\n        </Helmet>\n\n        <div className=\"viewport\">\n\n            <div className=\"viewport-top\">\n                {/* The main header section on top of the screen */}\n\n                <header className=\"site-head\">\n                    <div className=\"container\">\n                    <center><ButtonContainer>\n                        <Button onClick={(e) => {\n                            e.preventDefault();\n                            window.location.href='http://rushabh.info';\n                            }} >\n                        <FontAwesomeIcon icon={faHome} /> Home\n                        </Button>\n                    </ButtonContainer></center>\n\n                    <HeaderTitle> Welcome to my Blogsite</HeaderTitle>\n\n                        {/* <div className=\"site-mast\">\n                            <div className={isHome ? `site-mast-left` : `site-mast-left-flex`}>\n                                <Link to=\"/\">\n                                    {config.logo ?\n                                        <img className=\"site-logo\" src={config.logo} alt={config.siteTitleMeta} />\n                                        : <Img fixed={data.file.childImageSharp.fixed} alt={site.title} />\n                                    }\n                                </Link>\n                                {isHome ? null :\n                                    <nav className=\"site-nav\">\n                                        <div className=\"site-nav-left\">\n                                            <Navigation data={config.navigation} navClass=\"site-nav-item\" />\n                                        </div>\n                                    </nav>}\n                            </div>\n                            <div className=\"site-mast-right\">\n                                { config.siteTwitterHandle && <a href={ twitterUrl } className=\"site-nav-item\" target=\"_blank\" rel=\"noopener noreferrer\"><img className=\"site-nav-icon\" src=\"/images/icons/twitter.svg\" alt=\"Twitter\" /></a>}\n                                { config.siteFacebookHandle && <a href={ facebookUrl } className=\"site-nav-item\" target=\"_blank\" rel=\"noopener noreferrer\"><img className=\"site-nav-icon\" src=\"/images/icons/facebook.svg\" alt=\"Facebook\" /></a>}\n                                <a className=\"site-nav-item\" href={ `https://feedly.com/i/subscription/feed/${config.siteUrl}/rss/` } target=\"_blank\" rel=\"noopener noreferrer\"><img className=\"site-nav-icon\" src=\"/images/icons/rss.svg\" alt=\"RSS Feed\" /></a>\n                            </div>\n                        </div>\n                        { isHome ?\n                            <div className=\"site-banner\">\n                                <h1 className=\"site-banner-title\">{config.siteTitleMeta}</h1>\n                                <p className=\"site-banner-desc\">{config.siteDescriptionMeta}</p>\n                            </div> :\n                            null}\n                        {isHome ?\n                            <nav className=\"site-nav\">\n                                <div className=\"site-nav-left\">\n                                    <Navigation data={config.navigation} navClass=\"site-nav-item\" />\n                                </div>\n                                <div className=\"site-nav-right\">\n                                </div>\n                            </nav> : null} */}\n                    </div>\n                </header>\n                \n                \n                <main className=\"site-main\" id=\"particles-js\">\n                \n                    {/* All the main content gets inserted here, index.js, post.js */}\n                    {children}\n                </main>\n\n            </div>\n\n            <div className=\"viewport-bottom\">\n                {/* The footer at the very bottom of the screen */}\n                <footer className=\"site-foot\">\n                    <div className=\"site-foot-nav container\">\n                        {/* <div className=\"site-foot-nav-left\">\n                            <Link to=\"/\">{config.siteTitleMeta}</Link>\n                        </div>\n                        <div className=\"site-foot-nav-right\">\n                            <Navigation data={config.navigation} navClass=\"site-foot-nav-item\" />\n                        </div> */}\n                    </div>\n                </footer>\n\n            </div>\n            \n        </div>\n\n    </>\n    \n    )\n}\n\nDefaultLayout.propTypes = {\n    children: PropTypes.node.isRequired,\n    bodyClass: PropTypes.string,\n    isHome: PropTypes.bool\n}\n\nconst DefaultLayoutSettingsQuery = props => (\n    <StaticQuery\n        query={graphql`\n            query GhostSettings {\n                file(relativePath: {eq: \"ghost-icon.png\"}) {\n                    childImageSharp {\n                        fixed(width: 30, height: 30) {\n                            ...GatsbyImageSharpFixed\n                        }\n                    }\n                }\n            }\n        `}\n        render={data => <DefaultLayout data={data} {...props} />}\n    />\n)\n\nexport default DefaultLayoutSettingsQuery\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'gatsby'\nimport Img from 'gatsby-image'\nimport { readingTime as readingTimeHelper } from '@tryghost/helpers'\n\nconst PostCard = ({ post }) => {\n    // console.log(\"Postcard\", post)\n    const url = `/${post.frontmatter.slug}/`\n    const readingTime = readingTimeHelper(post)\n    \n    return (\n        <Link to={url} className=\"post-card\">\n            <header className=\"post-card-header\">\n                {post.frontmatter.feature_image &&\n                    post.frontmatter.feature_image.childImageSharp && (\n                    <Img\n                        fluid={\n                            post.frontmatter.feature_image\n                                .childImageSharp.fluid\n                        }\n                        alt={post.frontmatter.title}\n                    />\n                )}\n                {/* {post.frontmatter.feature_image &&\n                    <div className=\"post-card-image\" style={{\n                        backgroundImage: `url(${post.frontmatter.feature_image})` ,\n                    }}></div>} */}\n            </header>\n            <div className=\"post-card-content\">\n                {post.frontmatter.tags && (\n                    <span className=\"post-card-tags\">\n                        {post.frontmatter.tags[0].frontmatter.name}\n                    </span>\n                )}\n                {post.frontmatter.featured && <span>Featured</span>}\n                <h2 className=\"post-card-title\">\n                    {post.frontmatter.title}\n                </h2>\n                <section className=\"post-card-excerpt\">\n                    {post.excerpt}\n                </section>\n                <footer className=\"post-card-footer\">\n                    <div className=\"post-card-footer-left\">\n                        <div className=\"post-card-avatar\">\n                            {post.frontmatter.author ? (\n                                <img\n                                    className=\"author-profile-image\"\n                                    src={\n                                        post.frontmatter.author.frontmatter\n                                            .profile_image\n                                    }\n                                    alt={\n                                        post.frontmatter.author.frontmatter\n                                            .name\n                                    }\n                                />\n                            ) : (\n                                <img\n                                    className=\"default-avatar\"\n                                    src=\"/images/icons/avatar.svg\"\n                                    alt={\n                                        post.frontmatter.author.frontmatter\n                                            .name\n                                    }\n                                />\n                            )}\n                        </div>\n                        <span className=\"post-card-author-name\">\n                            {post.frontmatter.author.frontmatter.name}\n                        </span>\n                    </div>\n                    <div className=\"post-card-footer-right\">\n                        <div className=\"post-reading-time\">\n                            {readingTime}\n                        </div>\n                    </div>\n                </footer>\n            </div>\n        </Link>\n    )\n}\n\nPostCard.propTypes = {\n    post: PropTypes.shape({\n        frontmatter: PropTypes.object.isRequired,\n    }).isRequired,\n}\n\nexport default PostCard","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'gatsby'\n\nconst Pagination = ({ pageContext }) => {\n    const { previousPagePath, nextPagePath, humanPageNumber, numberOfPages } = pageContext\n\n    return (\n        <nav className=\"pagination\" role=\"navigation\">\n            <div>\n                {previousPagePath && (\n\n                    <Link to={previousPagePath} rel=\"prev\">\n                            Previous\n                    </Link>\n\n                )}\n            </div>\n            {numberOfPages > 1 && <div className=\"pagination-location\">Page {humanPageNumber} of {numberOfPages}</div>}\n            <div>\n                {nextPagePath && (\n\n                    <Link to={nextPagePath} rel=\"next\">\n                            Next\n                    </Link>\n                )}\n            </div>\n        </nav>\n    )\n}\n\nPagination.propTypes = {\n    pageContext: PropTypes.object.isRequired,\n}\n\nexport default Pagination\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'gatsby'\n\n/**\n* Navigation component\n*\n* The Navigation component takes an array of your Ghost\n* navigation property that is fetched from the settings.\n* It differentiates between absolute (external) and relative link (internal).\n* You can pass it a custom class for your own styles, but it will always fallback\n* to a `site-nav-item` class.\n*\n*/\nconst Navigation = ({ data, navClass }) => (\n    <>\n        {data.map((navItem, i) => {\n            if (navItem.url.match(/^\\s?http(s?)/gi)) {\n                return <a className={navClass} href={navItem.url} key={i} target=\"_blank\" rel=\"noopener noreferrer\">{navItem.label}</a>\n            } else {\n                return <Link className={navClass} to={navItem.url} key={i}>{navItem.label}</Link>\n            }\n        })}\n    </>\n)\n\nNavigation.defaultProps = {\n    navClass: `site-nav-item`,\n}\n\nNavigation.propTypes = {\n    data: PropTypes.arrayOf(\n        PropTypes.shape({\n            label: PropTypes.string.isRequired,\n            url: PropTypes.string.isRequired,\n        }).isRequired,\n    ).isRequired,\n    navClass: PropTypes.string,\n}\n\nexport default Navigation\n","export { default as Layout } from './Layout'\nexport { default as PostCard } from './PostCard'\nexport { default as Pagination } from './Pagination'\nexport { default as Navigation } from './Navigation'\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}